{
	"info": {
		"_postman_id": "96e9e6e6-777a-4b2a-995c-169673fa5d18",
		"name": "Nazarov_Aleksei_Olegovich_HW_2_Postman Copy",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "/first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "/user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"    let jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"name = Aleksei\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(\"Aleksei\");\r",
							"});\r",
							"\r",
							"pm.test(\"age = 28\", function () {\r",
							"    pm.expect(jsonData.age).to.eql(\"28\");\r",
							"});\r",
							"\r",
							"pm.test(\"salary = 1000\", function () {\r",
							"    pm.expect(jsonData.salary).to.eql(1000);\r",
							"});\r",
							"\r",
							"let reqData = request.data;\r",
							"\r",
							"pm.test(\"Response = Request\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(reqData.name);\r",
							"});\r",
							"\r",
							"pm.test(\"Response age = Request age\", function () {\r",
							"    pm.expect(jsonData.age).to.eql(reqData.age);\r",
							"});\r",
							"\r",
							"pm.test(\"Response salary = Request salary\", function () {\r",
							"    pm.expect(jsonData.salary).to.eql(+reqData.salary);\r",
							"});\r",
							"\r",
							"console.log(jsonData.family);\r",
							"\r",
							"pm.test(\"Response u_salary_1_5_year = salary*4\", function () {\r",
							"    pm.expect(jsonData.family.u_salary_1_5_year).to.eql(+reqData.salary*4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Aleksei",
							"type": "text"
						},
						{
							"key": "age",
							"value": "28",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Aleksei",
							"disabled": true
						},
						{
							"key": "age",
							"value": "28",
							"disabled": true
						},
						{
							"key": "salary",
							"value": "1000",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let jsonData = pm.response.json();\r",
							"\r",
							"let reqData = pm.request.url.query.toObject();\r",
							"\r",
							"pm.test(\"Response name = Request name\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(reqData.name);\r",
							"});\r",
							"\r",
							"pm.test(\"Response age = Request age\", function () {\r",
							"    pm.expect(jsonData.age).to.eql(reqData.age);\r",
							"});\r",
							"\r",
							"pm.test(\"Response salary = Request salary\", function () {\r",
							"    pm.expect(jsonData.salary).to.eql(+reqData.salary);\r",
							"});\r",
							"\r",
							"console.log(jsonData.family);\r",
							"\r",
							"pm.test(\"dog has name\", function() {\r",
							"    pm.expect(jsonData.family.pets.dog).to.have.property(\"name\");\r",
							"});\r",
							"\r",
							"pm.test(\"dog has age\", function() {\r",
							"    pm.expect(jsonData.family.pets.dog).to.have.property(\"age\");\r",
							"});\r",
							"\r",
							"pm.test(\"name has Luky\", function() {\r",
							"    pm.expect(jsonData.family.pets.dog.name).to.eql(\"Luky\");\r",
							"});\r",
							"\r",
							"pm.test(\"age has 4\", function() {\r",
							"    pm.expect(jsonData.family.pets.dog.age).to.eql(+\"4\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Aleksei&age=28&salary=1000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Aleksei"
						},
						{
							"key": "age",
							"value": "28"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let jsonData = pm.response.json();\r",
							"\r",
							"let reqData = pm.request.url.query.toObject();\r",
							"\r",
							"pm.test(\"Response name = Request name\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(reqData.name);\r",
							"});\r",
							"\r",
							"pm.test(\"Response age = Request age\", function () {\r",
							"    pm.expect(jsonData.age).to.eql(+reqData.age);\r",
							"});\r",
							"\r",
							"console.log(\"Request salary\", reqData.salary);\r",
							"\r",
							"console.log(\"Reponse salary\", jsonData.salary);\r",
							"\r",
							"console.log(jsonData.salary[0]);\r",
							"\r",
							"console.log(jsonData.salary[1]);\r",
							"\r",
							"console.log(jsonData.salary[2]);\r",
							"\r",
							"pm.test(\"Response salary [0] = Request salary\", function () {\r",
							"    pm.expect(jsonData.salary[0]).to.eql(+reqData.salary);\r",
							"});\r",
							"\r",
							"pm.test(\"Response salary [1] = Request salary*2\", function () {\r",
							"    pm.expect(jsonData.salary[1]).to.eql+(reqData.salary*2);\r",
							"});\r",
							"\r",
							"pm.test(\"Response salary [2] = Request salary*2\", function () {\r",
							"    pm.expect(jsonData.salary[2]).to.eql+(reqData.salary*3);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"name\", jsonData.name);\r",
							"\r",
							"pm.environment.set(\"age\", jsonData.age);\r",
							"\r",
							"pm.environment.set(\"salary\", jsonData.salary[0]);\r",
							"\r",
							"for (let i of jsonData.salary) {\r",
							"     console.log(i);\r",
							"};"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Aleksei&age=28&salary=1000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Aleksei"
						},
						{
							"key": "age",
							"value": "28"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"    let jsonData = pm.response.json();\r",
							"\r",
							"    let reqData = request.data;\r",
							"\r",
							"pm.test(\"json response has start_qa_salary\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"start_qa_salary\");\r",
							"});\r",
							"\r",
							"pm.test(\"json response has qa_salary_after_6_months\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_6_months\");\r",
							"});\r",
							"\r",
							"pm.test(\"json response has qa_salary_after_12_months\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_12_months\");\r",
							"});\r",
							"\r",
							"pm.test(\"json response has qa_salary_after_1.5_year\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_1.5_year\");\r",
							"});\r",
							"\r",
							"pm.test(\"json response has qa_salary_after_3.5_years\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_3.5_years\");\r",
							"});\r",
							"\r",
							"pm.test(\"json response has person\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"person\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response start_qa_salary = Request start_qa_salary\", function () {\r",
							"    pm.expect(jsonData.start_qa_salary).to.eql(+reqData.salary);\r",
							"});\r",
							"\r",
							"pm.test(\"Response qa_salary_after_6_months = Request salary*2\", function () {\r",
							"    pm.expect(jsonData.qa_salary_after_6_months).to.eql(+reqData.salary*2);\r",
							"});\r",
							"\r",
							"pm.test(\"Response qa_salary_after_12_months = Request salary*2.7\", function () {\r",
							"    pm.expect(jsonData.qa_salary_after_12_months).to.eql(+reqData.salary*2.7);\r",
							"});\r",
							"\r",
							"pm.test(\"Response qa_salary_after_1.5_year = Request salary*3.3\", function () {\r",
							"    pm.expect(jsonData[\"qa_salary_after_1.5_year\"]).to.eql(+reqData.salary*3.3);\r",
							"});\r",
							"\r",
							"pm.test(\"Response qa_salary_after_3.5_years = Request salary*3.8\", function () {\r",
							"    pm.expect(jsonData[\"qa_salary_after_3.5_years\"]).to.eql(+reqData.salary*3.8);\r",
							"});\r",
							"\r",
							"pm.test(\"Response person [1] u_name = Request salary\", function () {\r",
							"    pm.expect(jsonData.person.u_name[1]).to.eql(+reqData.salary);\r",
							"});\r",
							"\r",
							"pm.test(\"Response u_age = Request age\", function () {\r",
							"    pm.expect(jsonData.person.u_age).to.eql(+reqData.age);\r",
							"});\r",
							"\r",
							"pm.test(\"Response u_salary_5_years  = Request salary*4.2\", function () {\r",
							"    pm.expect(jsonData.person.u_salary_5_years).to.eql(+reqData.salary*4.2);\r",
							"});\r",
							"\r",
							"for (let i = 0; i < jsonData.person.u_name.length; i++) {\r",
							"  console.log(\"Вывод из списка, элемента с индексом \" + i + \": \" + jsonData.person.u_name[i]);\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}